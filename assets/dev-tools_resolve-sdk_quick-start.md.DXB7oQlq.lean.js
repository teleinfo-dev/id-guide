import{_ as i,c as n,a5 as e,j as s,a as l,o as t}from"./chunks/framework.CgiMItuT.js";const u=JSON.parse('{"title":"快速开始","description":"","frontmatter":{},"headers":[],"relativePath":"dev-tools/resolve-sdk/quick-start.md","filePath":"dev-tools/resolve-sdk/quick-start.md","lastUpdated":1729043285000}'),p={name:"dev-tools/resolve-sdk/quick-start.md"};function h(r,a,d,k,o,c){return t(),n("div",null,a[0]||(a[0]=[e(`<h1 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h1><h2 id="添加依赖" tabindex="-1">添加依赖 <a class="header-anchor" href="#添加依赖" aria-label="Permalink to &quot;添加依赖&quot;">​</a></h2><p>id-pointer-sdk 发布到 maven 仓库，应用在 pom.xml 文件中添加以下依赖。</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;cn.teleinfo.id-pointer&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;id-pointer-sdk&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;2.1.7&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="标识解析" tabindex="-1">标识解析 <a class="header-anchor" href="#标识解析" aria-label="Permalink to &quot;标识解析&quot;">​</a></h2><p>添加 id-pointer-sdk 依赖之后，可以直接进行标识解析操作，标识注册与维护请参照基本功能。</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取递归标识解析器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">IDResolver idResolver </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GlobalIdClientFactory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getIdResolver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 解析标识88.111.1/teleinfo.cn， 返回HandleValue数据为对应的标识值数据</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HandleValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] handleValues </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> idResolver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolveHandle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;88.111.1/teleinfo.cn&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="idclientfactory" tabindex="-1">IDClientFactory <a class="header-anchor" href="#idclientfactory" aria-label="Permalink to &quot;IDClientFactory&quot;">​</a></h2><h3 id="globalidclientfactory" tabindex="-1">GlobalIdClientFactory <a class="header-anchor" href="#globalidclientfactory" aria-label="Permalink to &quot;GlobalIdClientFactory&quot;">​</a></h3><p>通过 GlobalIdClientFactory 获取全局的 IDClientFactory.全局的 IDClientFactory 是预定义 参数的 <strong>IdClient</strong> 工厂, 用户可以通过后续的参数配置定义其内部的参数.标识解析 SDK 使用全局的 GlobalIdClientFactory 来获取 IDClientFactory, 使用全局的 IDClientFactory 进行前缀解析等动作.</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">IDClientFactory idClientFactory </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GlobalIdClientFactory.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getIdClientFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//...其它操作</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="构造器创建-idclientfactory-实例" tabindex="-1">构造器创建 IDClientFactory 实例 <a class="header-anchor" href="#构造器创建-idclientfactory-实例" aria-label="Permalink to &quot;构造器创建 IDClientFactory 实例&quot;">​</a></h3><p>除获取全局的 IDClientFactory 外,用户也可以通过构造器创建,需要传输 <strong>ChannelPoolMapManager</strong>参数与<strong>IDClientConfig</strong>参数,推荐使用声明 Bean 的方式与 spring 进行集成.</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IDClientFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ChannelPoolMapManager channelPoolMapManager, IDClientConfig idClientConfig)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><table tabindex="0"><thead><tr><th>限定符和型</th><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>IDClientConfig</td><td>getIdClientConfig()</td><td>获取 IDClient 对应的配置,可配置项见 <a href="./config">参数配置</a></td></tr><tr><td>IDResolver</td><td>getIdResolver()</td><td>获取标识解析器,标识解析器支持递归解析</td></tr><tr><td>IDClient</td><td>newInstance(java.net.InetSocketAddress serverAddress)</td><td>通过服务端地址连接标识解析节点,生成 IDClient</td></tr><tr><td>IDClient</td><td>newInstance(java.net.InetSocketAddress serverAddress, AuthenticationInfo authenticationInfo)</td><td>通过服务端地址与身份认证信息连接标识解析节点</td></tr><tr><td>IDClient</td><td>newInstance(java.net.InetSocketAddress serverAddress, java.lang.String adminUserId, int adminUserIndex, java.security.PrivateKey privateKey)</td><td>通过服务端地址,标识用户 ID,标识用户 Index,与私钥连接标识解析节点</td></tr><tr><td>IDClient</td><td>newInstance(java.lang.String prefix)</td><td>通过前缀解析获取标识解析节点地址并进行连接</td></tr><tr><td>IDClient</td><td>newInstance(java.lang.String prefix, AuthenticationInfo authenticationInfo)</td><td>通过前缀解析获取标识解析节点地址与身份认证信息并进行连接</td></tr><tr><td>IDClient</td><td>newInstance(java.lang.String prefix, java.lang.String adminUserId, int adminUserIndex, java.security.PrivateKey privateKey)</td><td>通过前缀解析获取标识解析节点地址,标识用户 ID,标识用户 Index,与私钥连接标识解析节点</td></tr></tbody></table><h2 id="idclient" tabindex="-1">IDClient <a class="header-anchor" href="#idclient" aria-label="Permalink to &quot;IDClient&quot;">​</a></h2><p>获取到 IDClient 后,可以通过 IDClient 调用相应的方法进行标识的操作.</p><h3 id="标识注册" tabindex="-1">标识注册 <a class="header-anchor" href="#标识注册" aria-label="Permalink to &quot;标识注册&quot;">​</a></h3><ul><li><strong>方法功能</strong>：创建新的标识</li><li><strong>方法描述</strong><ul><li>overwrite=true 创建标识，覆盖式更新，无论标识是否存在，原有标识属性全部替代为传入标识属性</li><li>overwrite=false 创建标识，如果标识存在则返回错误信息</li></ul></li></ul><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Creates a new handle. If the handle already exists, the method will throw</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * an exception. The proper course of action is then to delete the handle</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * and call the method again.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> The handle to create</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> values</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> An array of handle values to add to the handle.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@throws</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IDException</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Describes the error that occured in the process of creating the handle.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * overwrite default value is false</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createHandle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String handle, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HandleValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] values) throws IDException;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * you could set the value of overwrite by yourself; true or false</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createHandle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String handle, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HandleValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] values, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> overwrite) throws IDException;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li><strong>方法参数</strong></li></ul><table tabindex="0"><thead><tr><th>参数</th><th>类型</th><th>参数描述</th><th>示例</th></tr></thead><tbody><tr><td>handle</td><td>String</td><td>标识名称</td><td>88.888.3/20220121</td></tr><tr><td>values</td><td>HandleValue[]</td><td>标识属性值</td><td></td></tr><tr><td>overwrite</td><td>boolean</td><td>可根据使用方式选择</td><td>true / false</td></tr></tbody></table><h3 id="标识删除" tabindex="-1">标识删除 <a class="header-anchor" href="#标识删除" aria-label="Permalink to &quot;标识删除&quot;">​</a></h3><ul><li><strong>方法功能</strong>：按照标识进行删除</li><li><strong>方法描述</strong></li></ul><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Deletes an existing Handle from the handle server. &lt;/br&gt; &lt;b&gt; Note: &lt;/b&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * &lt;li&gt;The administrative priveleges have to be valid for this method to</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * perform without any exception&lt;/li&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> The handle to delete.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> deleteHandle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String handle) throws IDException;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li><strong>方法参数</strong></li></ul><table tabindex="0"><thead><tr><th>参数</th><th>类型</th><th>参数描述</th><th>示例</th></tr></thead><tbody><tr><td>handle</td><td>String</td><td>标识名称</td><td>88.888.3/20220121</td></tr></tbody></table><h3 id="标识值新增" tabindex="-1">标识值新增 <a class="header-anchor" href="#标识值新增" aria-label="Permalink to &quot;标识值新增&quot;">​</a></h3><ul><li><strong>方法功能</strong>：增加标识值</li><li><strong>方法描述</strong><ul><li>overwrite=true 创建标识，覆盖式更新，无论标识是否存在，原有标识属性全部替代为传入标识属性</li><li>overwrite=false 创建标识，如果标识存在则返回错误信息</li></ul></li></ul><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Adds new handle records. &lt;/br&gt; &lt;b&gt; Note: &lt;/b&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * &lt;li&gt;The administrative priveleges have to be valid for this method to</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * perform without any exception&lt;/li&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> The handle into which new values are to be added</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> values</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> The array of handle values to deposit</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * overwrite default value is false</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addHandleValues</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String handle, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HandleValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] values) throws IDException;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * you could set the value of overwrite by yourself; true or false</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addHandleValues</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String handle, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HandleValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] values, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> overwrite) throws IDException;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li><strong>方法参数</strong></li></ul><table tabindex="0"><thead><tr><th>参数</th><th>类型</th><th>参数描述</th><th>示例</th></tr></thead><tbody><tr><td>handle</td><td>String</td><td>标识名称</td><td>88.888.3/20220121</td></tr><tr><td>values</td><td>HandleValue[]</td><td>标识属性值</td><td></td></tr><tr><td>overwrite</td><td>boolean</td><td>可根据使用方式选择</td><td>true / false</td></tr></tbody></table><h3 id="标识值删除" tabindex="-1">标识值删除 <a class="header-anchor" href="#标识值删除" aria-label="Permalink to &quot;标识值删除&quot;">​</a></h3><ul><li><strong>方法功能</strong>：按照标识和 index 删除标识值</li><li><strong>方法描述</strong></li></ul><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Deletes an existing Handle from the handle server. &lt;/br&gt; &lt;b&gt; Note: &lt;/b&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * &lt;li&gt;The administrative priveleges have to be valid for this method to</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * perform without any exception&lt;/li&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> The handle to delete.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> indexes</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> The handle value index to delete.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> deleteHandleValues</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String handle, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] indexes) throws IDException;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li><strong>方法参数</strong></li></ul><table tabindex="0"><thead><tr><th>参数</th><th>类型</th><th>参数描述</th><th>示例</th></tr></thead><tbody><tr><td>handle</td><td>String</td><td>标识名称</td><td>88.888.3/20220121</td></tr><tr><td>indexes</td><td>int[]</td><td>标识属性 index</td><td>new int[]{}</td></tr></tbody></table><h3 id="标识值修改" tabindex="-1">标识值修改 <a class="header-anchor" href="#标识值修改" aria-label="Permalink to &quot;标识值修改&quot;">​</a></h3><ul><li><strong>方法功能</strong>：修改标识属性内容</li><li><strong>方法描述</strong><ul><li>overwrite=true 覆盖式更新，无论标识是否存在，原有标识属性全部替代为传入标识属性</li><li>overwrite=false 当标识属性不存在，不会进行更新，返回错误信息</li></ul></li></ul><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Updates the specified data handle values.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * &lt;li&gt;Make sure that the index value is specified in the array of handle</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * values or else this method will not work well.&lt;/li&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * &lt;li&gt;The administrative priveleges have to be valid for this method to</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * perform without any exception&lt;/li&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> values</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * overwrite default value is false</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> updateHandleValues</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String handle, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HandleValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] values) throws IDException;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * you could set the value of overwrite by yourself; true or false</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">updateHandleValues</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String handle, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HandleValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] values, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> overwrite) throws IDException;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li><strong>方法参数</strong></li></ul><table tabindex="0"><thead><tr><th>参数</th><th>类型</th><th>参数描述</th><th>示例</th></tr></thead><tbody><tr><td>handle</td><td>String</td><td>标识名称</td><td>88.888.3/20220121</td></tr><tr><td>values</td><td>HandleValue[]</td><td>标识属性值</td><td></td></tr><tr><td>overwrite</td><td>boolean</td><td>可根据使用方式选择</td><td>true / false</td></tr></tbody></table><h3 id="标识解析-1" tabindex="-1">标识解析 <a class="header-anchor" href="#标识解析-1" aria-label="Permalink to &quot;标识解析&quot;">​</a></h3><ul><li><strong>方法功能</strong>：提供标识解析查询服务，用户可通过标识查询接口查询标识详细信息</li><li><strong>方法描述</strong></li></ul><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Resolves a handle and returns a set of handle values</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> The value of the handle to resolve</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@exception</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IDException</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Describes the error in resolution</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HandleValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolveHandle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String handle) throws IDException</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Resolves a handle and returns a set of handle values that satisfy the</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * type filter specified. If the resolution is to retrieve all handle</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * values, specify null for both filter and indexes. If the administrative</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * priveleges are applicable, the restricted values will also be returned.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Also, the resolution request is not authoritative.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> handle</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> The value of the handle to resolve</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> types</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> The types of the handle values that we are looking for.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@exception</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IDException</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Describes the error in resolution</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HandleValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolveHandle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String handle, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] types, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] indexes) throws IDException;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ul><li><strong>方法参数</strong></li></ul>`,50),s("table",{tabindex:"0"},[s("thead",null,[s("tr",null,[s("th",null,"参数"),s("th",null,"类型"),s("th",null,"参数描述"),s("th",null,"示例")])]),s("tbody",null,[s("tr",null,[s("td",null,"handle"),s("td",null,"String"),s("td",null,"标识名称"),s("td",null,"88.888.3/20220121")]),s("tr",null,[s("td",null,"types"),s("td",null,"String[]"),s("td",null,"标识属性类型"),s("td",{URL:""},"new String[]")]),s("tr",null,[s("td",null,"indexes"),s("td",null,"int[]"),s("td",null,"标识属性索引"),s("td",null,"new int[]{}")])])],-1),s("h2",{id:"valuehelper",tabindex:"-1"},[l("ValueHelper "),s("a",{class:"header-anchor",href:"#valuehelper","aria-label":'Permalink to "ValueHelper"'},"​")],-1),s("p",null,"ValueHelper 是一个标识值的工厂类,使用单例模式封装,内部封装了各种标识值对象的创建方法.",-1)]))}const b=i(p,[["render",h]]);export{u as __pageData,b as default};
